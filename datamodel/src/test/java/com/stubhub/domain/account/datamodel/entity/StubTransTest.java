package com.stubhub.domain.account.datamodel.entity;

import java.math.BigDecimal;
import java.util.Calendar;
import java.util.Currency;
import java.util.Locale;

import junit.framework.Assert;

import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import com.stubhub.newplatform.common.entity.Money;

public class StubTransTest {

	private StubTrans st;
	
	@BeforeTest
	public void setUp() {
		st = new StubTrans();
	}

	@Test
	public void mockStubTrans(){
		Long val = 1l;
		String operatorId = "bijain";
		Calendar today = Calendar.getInstance();
		Boolean boo = true;
		Money money = new Money(new BigDecimal(1), "USD");
		st.setAccertifyUserName("bijain");
		st.setActiveCsFlag(val);
		st.setAddOnFee(money);
		st.setAffiliateId(val);
		st.setAttentionFlag(true);
		st.setBidderCobrand("1");
		st.setBobId(val);
		st.setBuyDomainId(val);
		st.setBuyerAuthenticatedSessionGuid("1");
		st.setBuyerFee("1");
		st.setBuyerFeeVal(money);
		st.setBuyerId(val);
		st.setBuyerIpAddress("1");
		st.setBuyerTealeafSessionGuid("1");
		st.setBuyerThreatMetrixRefId("1");
		st.setBuyVAT(money);
		st.setCancelled(true);
		st.setCcId(val);
		st.setConfirmFlowTrackId(val);
		st.setConfirmOptionId(val);
		st.setConfirmSource(val);
		st.setContactId(val);
		st.setCreatedBy(operatorId);
		st.setCreatedTS(today);
		st.setCvvCheckStatusId(val);
		st.setDateAdded(today);
		st.setDateLastModified(today);
		st.setDeliveryOptionId(val);
		st.setDiscountCost(money);
		st.setEventId(val);
		st.setEventStatusIdAtConfirm(val);
		st.setExpectedDeliveryDate(today);
		st.setFraudCheckStatusId(val);
		st.setFraudOrderReviewHoldTime(today);
		st.setFraudResolutionId(val);
		st.setGroupComments(operatorId);
		st.setHoldPaymentTypeId(val);
		st.setInHandDate(today);
		st.setLastUpdatedBy(operatorId);
		st.setLastUpdatedTS(today);
		st.setLatestOrderProcStatusId(val);
		st.setListingVersion(val);
		st.setLogisticsMethod(val);
		st.setLogisticVAT(money);
		st.setMktngCommOptin(true);
		st.setMktngPartnerId(val);
		st.setOrderId(val);
		st.setOrderProcStatusCode(val);
		st.setOrderProcStatusEffDate(today);
		st.setOrderProcSubStatusCode(val);
		st.setOrderSourceId(val);
		st.setPaymentBufferInHours(11.11);
		st.setPaymentTermId(val);
		st.setPremiumFees(money);
		st.setQuantity(val);
		st.setRowDesc("1");
		st.setSaleMethod(val);
		st.setSeats("1");
		st.setSection("1");
		st.setSellDomainId(val);
		st.setSellerCCId(val);
		st.setSellerCobrand(operatorId);
		st.setSellerComments(operatorId);
		st.setSellerConfirmed(true);
		st.setSellerFee("1");
		st.setSellerFeeVal(money);
		st.setSellerId(val);
		st.setSellerPaymentTypeId(val);
		st.setSellerPayoutAmount(money);
		st.setSellerPayoutAmountAtConfrm(money);
		st.setSellIncrementalFee(money);
		st.setSellVAT(money);
		st.setShipCost(money);
		st.setStubnetUserId(val);
		st.setTicketCost(money);
		st.setTicketId(val);
		st.setTicketMediumId(val);
		st.setTotalCost(money);
		st.setVenueConfigSectionsId(val);
		st.setCurrency(Currency.getInstance(Locale.US));
		
		Assert.assertEquals(st.getCurrency(), Currency.getInstance(Locale.US));
		Assert.assertEquals(st.getActiveCsFlag(), val);
		Assert.assertEquals(st.getVenueConfigSectionsId(), val);
		Assert.assertEquals(st.getSellerComments(),operatorId);
		Assert.assertEquals(st.getCreatedTS(),today);
		Assert.assertEquals(st.getTicketMediumId(),val);
		Assert.assertEquals(st.getConfirmOptionId(),val);
		Assert.assertEquals(st.getDeliveryOptionId(),val);
		Assert.assertEquals(st.getEventStatusIdAtConfirm(),val);
		Assert.assertEquals(st.getOrderProcStatusCode(),val);
		Assert.assertEquals(st.getOrderProcStatusEffDate(),today);
		Assert.assertEquals(st.getExpectedDeliveryDate(),today);
		Assert.assertEquals(st.getConfirmFlowTrackId(),val);
		Assert.assertEquals(st.getInHandDate(),today);
		Assert.assertEquals(st.getSellerCCId(),val);
		Assert.assertEquals(st.getFraudCheckStatusId(),val);
		Assert.assertEquals(st.getBuyerIpAddress(),"1");
		Assert.assertEquals(st.getBuyerTealeafSessionGuid(),"1");
		Assert.assertEquals(st.getOrderSourceId(),val);
		Assert.assertEquals(st.getStubnetUserId(),val);
		Assert.assertEquals(st.getBuyerThreatMetrixRefId(),"1");
		Assert.assertEquals(st.getConfirmSource(),val);
		Assert.assertEquals(st.getListingVersion(),val);
		Assert.assertEquals(st.getFraudResolutionId(),val);
		Assert.assertEquals(st.getMktngPartnerId(),val);
		Assert.assertEquals(st.getMktngCommOptin(),boo);
		Assert.assertEquals(st.getAddOnFee(), money);
		Assert.assertEquals(st.getCvvCheckStatusId(), val);
		Assert.assertEquals(st.getSellDomainId(),val);
		Assert.assertEquals(st.getSellIncrementalFee(), money);
		Assert.assertEquals(st.getFraudOrderReviewHoldTime(), today);
		Assert.assertEquals(st.getAccertifyUserName(),"bijain");
		Assert.assertEquals(st.getPaymentBufferInHours(),new Double(11.11));		
		Assert.assertEquals(st.getAccertifyUserName(),"bijain");
		Assert.assertEquals(st.getBidderCobrand(),"1");
		Assert.assertEquals(st.getBuyerAuthenticatedSessionGuid(),"1");
		Assert.assertEquals(st.getBuyerFee(),"1");
		Assert.assertEquals(st.getBuyerIpAddress(),"1");
		Assert.assertEquals(st.getBuyerTealeafSessionGuid(),"1");
		Assert.assertEquals(st.getBuyerThreatMetrixRefId(),"1");
		Assert.assertEquals(st.getCreatedBy(),"bijain");
		Assert.assertEquals(st.getGroupComments(),"bijain");
		Assert.assertEquals(st.getLastUpdatedBy(),"bijain");
		Assert.assertEquals(st.getRowDesc(),"1");
		Assert.assertEquals(st.getSeats(),"1");
		Assert.assertEquals(st.getSection(),"1");
		Assert.assertEquals(st.getSellerCobrand(),"bijain");
		Assert.assertEquals(st.getSellerComments(),"bijain");
		Assert.assertEquals(st.getSellerFee(),"1");
		Assert.assertEquals(st.getActiveCsFlag(),val);
		Assert.assertEquals(st.getAddOnFee(),money);
		Assert.assertEquals(st.getAffiliateId(),val);
		Assert.assertTrue(st.getAttentionFlag());
		Assert.assertEquals(st.getBobId(),val);
		Assert.assertEquals(st.getBuyDomainId(),val);
		Assert.assertEquals(st.getBuyerFeeVal(),money);
		Assert.assertEquals(st.getBuyerId(),val);
		Assert.assertEquals(st.getBuyVAT(),money);
		Assert.assertTrue(st.getCancelled());
		Assert.assertEquals(st.getCcId(), val);
		Assert.assertEquals(st.getConfirmFlowTrackId(),val);
		Assert.assertEquals(st.getConfirmOptionId(),val);
		Assert.assertEquals(st.getConfirmSource(),val);
		Assert.assertEquals(st.getContactId(),val);
		Assert.assertEquals(st.getCreatedTS(),today);
		Assert.assertEquals(st.getCvvCheckStatusId(),val);
		Assert.assertEquals(st.getDateAdded(),today);
		Assert.assertEquals(st.getDateLastModified(),today);
		Assert.assertEquals(st.getDeliveryOptionId(),val);
		Assert.assertEquals(st.getDiscountCost(),money);
		Assert.assertEquals(st.getEventId(),val);
		Assert.assertEquals(st.getEventStatusIdAtConfirm(),val);
		Assert.assertEquals(st.getExpectedDeliveryDate(),today);
		Assert.assertEquals(st.getFraudCheckStatusId(),val);
		Assert.assertEquals(st.getFraudOrderReviewHoldTime(),today);
		Assert.assertEquals(st.getFraudResolutionId(),val);
		Assert.assertEquals(st.getHoldPaymentTypeId(),val);
		Assert.assertEquals(st.getInHandDate(),today);
		Assert.assertEquals(st.getLastUpdatedTS(),today);
		Assert.assertEquals(st.getLatestOrderProcStatusId(),val);
		Assert.assertEquals(st.getListingVersion(),val);
		Assert.assertEquals(st.getLogisticsMethod(),val);
		Assert.assertEquals(st.getLogisticVAT(),money);
		Assert.assertTrue(st.getMktngCommOptin());
		Assert.assertEquals(st.getMktngPartnerId(),val);
		Assert.assertEquals(st.getOrderId(),val);
		Assert.assertEquals(st.getOrderProcStatusCode(),val);
		Assert.assertEquals(st.getOrderProcStatusEffDate(),today);
		Assert.assertEquals(st.getOrderProcSubStatusCode(),val);
		Assert.assertEquals(st.getOrderSourceId(),val);
		Assert.assertEquals(st.getPaymentBufferInHours(),11.11);
		Assert.assertEquals(st.getPaymentTermId(),val);
		Assert.assertEquals(st.getPremiumFees(),money);
		Assert.assertEquals(st.getQuantity(),val);
		Assert.assertEquals(st.getSaleMethod(),val);
		Assert.assertEquals(st.getSellDomainId(),val);
		Assert.assertEquals(st.getSellerCCId(),val);
		Assert.assertTrue(st.getSellerConfirmed());
		Assert.assertEquals(st.getSellerFeeVal(),money);
		Assert.assertEquals(st.getSellerId(),val);
		Assert.assertEquals(st.getSellerPaymentTypeId(),val);
		Assert.assertEquals(st.getSellerPayoutAmount(),money);
		Assert.assertEquals(st.getSellerPayoutAmountAtConfrm(),money);
		Assert.assertEquals(st.getSellIncrementalFee(),money);
		Assert.assertEquals(st.getSellVAT(),money);
		Assert.assertEquals(st.getShipCost(), money);
		Assert.assertEquals(st.getStubnetUserId(),val);
		Assert.assertEquals(st.getTicketCost(),money);
		Assert.assertEquals(st.getTicketId(),val);
		Assert.assertEquals(st.getTicketMediumId(),val);
		Assert.assertEquals(st.getTotalCost(),money);
		Assert.assertEquals(st.getVenueConfigSectionsId(),val);		
	}
}
